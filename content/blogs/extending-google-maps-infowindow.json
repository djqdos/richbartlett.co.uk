{
  "date": "2012-08-06T23:00:00.000Z",
  "title": "Extending Google Maps' InfoWindow",
  "body": "## Google Maps' InfoWindow...\n\n... is good, in that you don't really need to do any extra work to get a popup to appear on a map.\\\n\\\nBut, What happens when you want to customize it? - sure, you can put whatever content you like inside the infowindow, but your stuck with the standard white box with trail arrow.. you know the one..\n\n// image 1\n\nyeah.. that one!\\\n\\\nI came across a very handy plugin the other day, the [InfoBox](http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/examples.html) plugin.\\\n\\\nThis plugin replaces the default InfoWindow object in google maps, but crucially, allows you to specify the complete HTML that makes up your popup window.\\\n\\\nTo use the infobox plug, download a copy of the source, and reference in your page:\n\n```\n <script src=\"/path/to/infobox.js\" type=\"text/javascript\"></script>  \n```\n\nThen, in your code, create an instance of this object:\n\n```\n var ib = new InfoBox();  \n```\n\nYou can then call that in place of the regular infoWindow.open()\n\n```\nib.open(theMap, marker);  \n```\n\nhowever, the power of this control comes with the options. Have a check over the [API Reference](http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/reference.html) for the full details.\\\n\\\nwith the InfoBox options, you can\\\n\\\nHere's a snapshot of the example from the InfoBox site:\n\n```\n     var myOptions = {  \n          content: boxText \n         ,boxClass : 'infoBoxClass' \n         ,disableAutoPan: false  \n         ,maxWidth: 0  \n         ,pixelOffset: new google.maps.Size(-140, 0)  \n         ,zIndex: null  \n         ,boxStyle: {   \n          background: \"url('tipbox.gif') no-repeat\"  \n          ,opacity: 0.75  \n          ,width: \"280px\"  \n          }  \n         ,closeBoxMargin: \"10px 2px 2px 2px\"  \n         ,closeBoxURL: \"http://www.google.com/intl/en_us/mapfiles/close.gif\"  \n         ,infoBoxClearance: new google.maps.Size(1, 1)  \n         ,isHidden: false  \n         ,pane: \"floatPane\"  \n         ,enableEventPropagation: false  \n     };  \n```\n\nThe main ones you want to look at are the 'content', and infoBoxClearence.\\\n\\\nthe \"content\" option specifies the actual HTML content that will be displayed in the popup.\\\nDefine your HTML markup inside your script, and then point it to the \"content\" element.\\\n\\\nHere, I've taken the example from the API examples page:\n\n```\n     var marker = new google.maps.Marker({  \n      map: theMap,  \n      draggable: true,  \n      position: new google.maps.LatLng(49.47216, -123.76307),  \n      visible: true  \n     });  \n     var boxText = document.createElement(\"div\");  \n     boxText.style.cssText = \"border: 1px solid black; margin-top: 8px; background: yellow; padding: 5px;\";  \n     boxText.innerHTML = \"City Hall, Sechelt<br>British Columbia<br>Canada\";  \n     var myOptions = {  \n          content: boxText  \n         ,disableAutoPan: false  \n         ,maxWidth: 0  \n         ,pixelOffset: new google.maps.Size(-140, 0)  \n         ,zIndex: null  \n         ,boxStyle: {   \n          background: \"url('tipbox.gif') no-repeat\"  \n          ,opacity: 0.75  \n          ,width: \"280px\"  \n          }  \n         ,closeBoxMargin: \"10px 2px 2px 2px\"  \n         ,closeBoxURL: \"http://www.google.com/intl/en_us/mapfiles/close.gif\"  \n         ,infoBoxClearance: new google.maps.Size(1, 1)  \n         ,isHidden: false  \n         ,pane: \"floatPane\"  \n         ,enableEventPropagation: false  \n     };  \n     var ib = new InfoBox(myOptions);  \n     ib.open(theMap, marker);  \n```\n\nYou can see that 'boxText' variable contains HTML elements. This is what is output to your infobox.\\\nOne thing to bear in mind, is that the HTML you provide here, will be wrapped inside of a <div> element.\\\nIf you do not specify a 'boxClass' option, then the default will be \".infoBox\". Of course, specify your own if you like.\\\n\\\nThis means that you can style both the outter element, and the inner content as you please.\\\n\\\nSo, with some custom CSS, you can make rather fetching (or at least, different to the standard infowindow)\n\n![](/img/infobox.png)\n\n### Footnote:\n\nWriting out your markup directly in javascript like above, can be tedious. Especially if you want to put a large amount of content into said infobox.\\\n\\\nA better alternative to this is to use Templating. One plugin we've used recently is [Handlebars](http://handlebarsjs.com/). Go check it out. It makes working with HTML inside of javascript/jquery much much easier",
  "tags": [
    "javascript"
  ],
  "excerpt": "Extending Google Maps' InfoWindow"
}