{
  "date": "2016-02-03T00:00:00.000Z",
  "title": "The beginnings of a new welcome screen - Raspberry Pi Adventures",
  "body": "In our offices' reception room, there is a wall-mounted TV. On it, we display a welcoming video that shows off our work.\\\n\\\nThis is powered by a laptop out of sight in another room, with a video playing on a loop.\n\n### New Screens\n\n\\\nWe recently outfitted our meeting rooms with shiny new TV's, so we moved one of the existing screens to the reception room.\\\nAt this point, we decided to investigate whether we could ditch the laptop for something a little more neater, and easier to manage.\\\n\\\nThe first idea to explore was using a USB memory stick with a video on it. This could be powered by the TV itself, and would be easy to update when needed. We'd take the USB stick, take it to a computer and copy the files across. Easy!\\\n\\\nOne problem we discovered, was that the videos wouldn't loop. Therefore, we created a video that was 10 hours long, repeating the actual video. Obviously, this isn't a good solution for easy manageability.\\\nBack to the drawing board.\n\n### The Raspberry Pi\n\nEnter the Raspberry Pi. A small credit-card sized computer, with an HDMI port, 4 USB ports, Ethernet connection, and a micro-usb port for power.\\\n\\\nAfter a bit of research, we discovered a piece of software called [PiPresents](https://pipresents.wordpress.com/). This program allows you to specifiy a collection of images, and/or videos to play in sequence, repeatedly on loop. This sounds perfect!\\\nSpecifically, there is an option for 'LiveShow', in which this can read all files from a location on disk. You don't get the ability to specify which images or videos are displayed in which order, or for how long each image is displayed for with this option, but we didn't need that level of flexibility. Also, having to do that each time the collection of images/videos are updated kind of negates the 'ease-of-use' mechanism we were after.\\\n\\\nSo, we grabbed a Raspberry Pi Model B (one of the first generation ones), and set about installing.\n\n#### Raspbian\n\nPiPresents runs on Raspbian, a linux distro based on Debian, designed to run on the Pi. - this was the first step: Get the operating system installed.\\\n\\\nDownload the [NOOBS](https://www.raspberrypi.org/downloads/raspbian/) image from the Raspbian site, get that copied to your microSD card.\\\nFrom here its all done from the Pi, so get it connected to a screen, and power up.\\\nFollow the instructions for installing Raspbian, and wait for it to install.\\\n\\\nOnce its all installed, and the Pi has booted into Raspbian, we can get cracking.\\\nYou can either do the work on the Pi itself, or you can SSH/Terminal/PuTTy into it to continue the setup, but be aware, you won't be able to run the actual video/images remotely.\\\n\\\nWe need to install the various bits needed to run this application, so either open a terminal window, or remotely via your SSH/puTTy connection, and enter the following:\n\n```\nsudo apt-get update\n```\n\n\n\n#### PiPresents\n\nOnce that has updated, you can then install the required components:\n\n```\nsudo apt-get install python-imaging python-imaging-tk unclutter mplayer uzbl\n```\n\n\\\nWe then need to install pexpect:\n\n```\nwget http://pexpect.sourceforge.net/pexpect-2.3.tar.gz\n     tar xzf pexpect-2.3.tar.gz\n     cd pexpect-2.3\n     sudo python ./setup.py install\n```\n\n\\\nNow, we are in a position to install PiPresents:\n\n```\nwget https://github.com/KenT2/pipresents-gapless/tarball/master -O - | tar xz\n\n```\n\n\\\nThere should now be a directory called 'KenT2-pipresents-gapless-examples-xxxx' in your home directory\\\nRename this to 'pipresents'\\\n\\\nFrom here, you'll need to be doing your work on the Pi itself.\\\n\\\nRun PiPresents, to make sure its all working. The first time you run this, you will get an error saying a profile doesn't exist:\n\n```\npython /home/pi/pipresents/pipresents.py\n```\n\n\\\nNow, we can create a profile. Enter the following:\n\n```\npython pp_editor.py\n```\n\n\\\nFrom here, select Profile > New From Template, and select 'Liveshow'\\\n\\\nOnce you have a new profile created, select the 'liveshow' from the 'Shows' box, then click the 'Edit Show' button in the middle.\\\n\\\nThere's a few options we need to set here:\\\n\\\nSet the Image dimensions to\n\n```\nwarp 0 0 1920 1080\n```\n\n\\\nThis will show images full-screen (if your screen is a FullHD, 1920x1080 display), rather than at its original size.\\\nDo the same for the Video dimensions.\\\n\\\nClose the window, you are done with those settings.\\\n\\\nEdit the 'Live Tracks' directory to where you want to store your files.\\\n\\\nStart the presentation with the following:\n\n```\npython ./pipresents/pipresents.py -b -f -p [profilename]\n```\n\n\\\n\\\nthe -b switch removes the mouse cursor, and -f displays full-screen\\\nthe -p is for the profile which you created above.\\\n\\\nEverything should be running now, displaying whatever images/video you have in the directory.\n\n#### Auto-boot\n\nOnce its all up and running, we now need to edit the startup script to launch the python script when the Pi is turned on.\\\nFrom a terminal window, navigate to the /home/pi/.config/lxsession/LXDE-pi directory\\\n\\\nNote: if you are using a Raspbian release prior to 24/12/2014, then the path is slightly different: /home/pi/.config/lxsession/LXDE\\\n\\\nIf there is a file called 'autostart', then edit that, or create one with:\n\n```\nsudo nano autostart\n```\n\n\\\n\\\nIn this file, enter\n\n```\nsudo python /home/pi/pipresents/pipresents.py -b -f -p [profilename]\n```\n\n\\\n\\\nMake the autostart file executable, with\n\n```\nchmod +x autostart\n\n```\n\n\\\nNow, reboot the Pi. You should boot up into Raspbian, then PiPresents should start playing your media\n\n#### Growing Pains\n\nWe initally set up a network share to hold the media files, so people could drop in/remove media files whenever. This worked well during testing, but when we put the Pi in-situ, occasionally after an hour or so, the screen would freeze, and the Pi crashed.\\\n\\\nWe thought that the network connection was potentially dropping out, which would cause a wobbly.\\\nAnother issue we had was when powering the Pi directly from the USB port of the screen. We'd get a small box in the top-left corner of the screen. Turns out, this is a notification that the Pi isnt drawing enough power.\\\nSo, rather than powering directly from the TV, we plugged it into the wall socket. One problem solved, but this then left us with a dilemma. We ideally wanted to be able to to just turn the TV on, and the Pi would boot up, and start playing the videos. At the end of the day, we'd just turn the TV off, and the Pi would should down. Because we now have the Pi on a seperate power source, this no longer applies. No big deal though, we can either leave it running, or switch both the TV & Pi off via the wall switch.\\\n\\\nAfter testing for a couple of days, we realised we were still getting issues intermittently. At this point, we decided to change tack, and have the media stored locally on the Pi, but have a share available pointing to that directory, essentially switching it round. We can connect to the Pi via a network share, and still be able to add/remove files remotely, but now the files are stored directly on the Pi. Even during a network outage, the screen will still be working.\\\n\\\nWe wondered if the original Pi was actually powerful enough to run continuously without issues. With only a 700MHz processor, and 256mb ram, we didnt think this was quite enough grunt.\\\nSo, we switched out the Pi for a Pi 2, which comes with a 900MHz, quad-core ARM7 processor, and 1GB ram. This should be more than enough umpff to work without issues.\\\n\\\nWe've had the Pi2 in place for a week or so now, with no issues reported.\n\n#### Update:\n\n\\\nWe've liked this process so much, we've decided to add a second screen on the opposite wall, that displays a collection of images in a loop. These can be tailored to be client-specific when we have guests in, to give a more personal and welcoming entrance. All with drag/drop maintainence!\n\n<!--EndFragment-->",
  "tags": [
    "home-network"
  ],
  "excerpt": "The beginnings of a new welcome screen - Raspberry Pi Adventures"
}