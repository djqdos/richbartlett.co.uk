{
  "date": "2017-11-14T12:46:24.144Z",
  "title": "EPiServer in the jungle",
  "body": "At Freestyle, we use EPiServer as our go-to CMS platform. It's reliable, fast, and easy to use (both from a user's perspective, and from a development point of view.\n\n### EPiServer in the cloud\n\nWe recently undertook the massive task of migrating all of our live infrastructure that we use to host our client's websites from a data centre, to the cloud, via Amazon Web Services (AWS).\\\nThis is beneficial for us for many reasons. From a technical aspect, the main one being able to spin up a new machine quickly and easily. The ability to create a new virtual machine in a matter of minutes is a huge timesaver, when compared to housing physical machines in a co-located data centre.\n\n#### Imagine this:\n\nYou have an existing website, that is currently housed on physical machines somewhere away from your office. You need to add some more storage to one of the boxes. In order to add another hard drive, you need to go and buy the required hardware (a hard drive or two in this case), get in your car, and drive to the hosts location. You have to sign yourself in, get to the box, turn everything off, and install the new drives.\\\nYou then need to put everything back together again, and power everything up.\\\n\\\nTime-consuming to say the least.\\\n\\\nNow, when hosted in a cloud-based platform, such as AWS, its as easy as logging into the AWS console via the browser, turn the virtual machine off, tinker with a few settings, and power back on. simple!\\\nYou don't even need to get up from your chair!\\\n\\\n\\\nWe recently changed one of our client sites to change from locally stored CMS assets from a virtual machine in the AWS cluster (our asset server), to use the S3 storage solution. Not only would this make things easier for us, it would negate the need to have an extra virtual machine in which to store these assets on.\\\ntime saved on maintenance is big here.\\\n\\\nTo convert an existing EPiServer site (that is currently on AWS) to use S3 storage, instead of 'locally' stored files is very easy.\\\n\\\nFirst, you should have the EPiServer.Amazon, and AWS SDK for .NET Nuget packages installed:\n\n![](/img/nuget.png)\n\nOnce these packages are installed, open the web.config in the root of your main project in the solution.\\\nFind the\n\n```\n<blob>\n```\n\n\\\nelement. Inside this, there should be <providers>.\\\nAdd a new element as such:\n\n```\n<add name=\"s3\" type=\"EPiServer.Amazon.Blobs.AmazonBlobProvider,EPiServer.Amazon\" accessKey=\"xxx\" secretKey=\"xxx\" region=\"xxx\" bucket=\"xxx\" />\n```\n\n\\\nYou should have set up an IAM (Identity and Access Management) that grants permissions to whatever bucket you require to hold your assets.\\\n\\\nProvide the Access Key, Secret Key, Region and last of all, the Bucket to this entry.\\\n\\\nChange the default provider to point to your S3 account, and job's a good 'un.\\\n\\\nYou should now be running your website, with all of your assets stored 'in the cloud' via S3. No more local storage is required :)",
  "excerpt": "Migrating EPiServer from installation files to using nuget packages",
  "tags": [
    "episerver"
  ]
}